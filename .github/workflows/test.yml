name: build-test
on:
  pull_request:
  push:
    branches:
      - main
      - "releases/*"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: |
          npm install
      - run: |
          npm run all
  space_id:
    runs-on: ubuntu-latest
    steps:
      - id: space_id
        run: echo "::set-output name=id::$(uuidgen)"
    outputs:
      space_id: ${{ steps.space_id.outputs.id }}
  # test-error-without-loft:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: ./
  #       continue-on-error: true
  #       with:
  #         name: create-myspace-${{ matrix.os }}
  #     - run: loft list spaces
  test-auto-cleanup-default:
    needs: [space_id]
    strategy:
      matrix:
        os:
          - windows-latest
          - ubuntu-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: loft-sh/setup-loft@main
        with:
          url: ${{ secrets.LOFT_URL }}
          access-key: ${{ secrets.LOFT_ACCESS_KEY }}
      - uses: ./
        with:
          name: create-${{ matrix.os }}-${{ needs.space_id.outputs.space_id }}
      - run: loft list spaces
      - run: loft delete space create-${{ matrix.os }}-${{ needs.space_id.outputs.space_id }}
  test-auto-cleanup-false:
    needs:
      - space_id
      - test-auto-cleanup-default
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: loft-sh/setup-loft@main
        with:
          url: ${{ secrets.LOFT_URL }}
          access-key: ${{ secrets.LOFT_ACCESS_KEY }}
      - uses: ./
        with:
          name: auto-cleanup-false-${{ needs.space_id.outputs.space_id }}
          auto-cleanup: false
      - run: loft list spaces
      - run: loft delete space auto-cleanup-false-${{ needs.space_id.outputs.space_id }}
  test-auto-cleanup-true:
    needs:
      - space_id
      - test-auto-cleanup-false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: loft-sh/setup-loft@main
        with:
          url: ${{ secrets.LOFT_URL }}
          access-key: ${{ secrets.LOFT_ACCESS_KEY }}
      - uses: ./
        with:
          name: auto-cleanup-true-${{ needs.space_id.outputs.space_id }}
          auto-cleanup: true
      - run: loft list spaces
  test-delete-after:
    needs:
      - space_id
      - test-auto-cleanup-true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: loft-sh/setup-loft@main
        with:
          url: ${{ secrets.LOFT_URL }}
          access-key: ${{ secrets.LOFT_ACCESS_KEY }}
      - uses: ./
        with:
          name: delete-after-${{ needs.space_id.outputs.space_id }}
          delete-after: 60
      - run: loft list spaces
      - run: loft delete space delete-after-${{ needs.space_id.outputs.space_id }}
  test-sleep-after:
    needs:
      - space_id
      - test-delete-after
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: loft-sh/setup-loft@main
        with:
          url: ${{ secrets.LOFT_URL }}
          access-key: ${{ secrets.LOFT_ACCESS_KEY }}
      - uses: ./
        with:
          name: sleep-after-${{ needs.space_id.outputs.space_id }}
          sleep-after: 60
      - run: loft list spaces
      - run: loft delete space sleep-after-${{ needs.space_id.outputs.space_id }}
  test-disable-direct-cluster-endpoint:
    needs:
      - space_id
      - test-sleep-after
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: loft-sh/setup-loft@main
        with:
          url: ${{ secrets.LOFT_URL }}
          access-key: ${{ secrets.LOFT_ACCESS_KEY }}
      - uses: ./
        with:
          name: disable-endpoint-${{ needs.space_id.outputs.space_id }}
          disable-direct-cluster-endpoint: true
      - run: loft list spaces
      - run: loft delete space disable-endpoint-${{ needs.space_id.outputs.space_id }}
  test-template:
    needs:
      - space_id
      - test-disable-direct-cluster-endpoint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: loft-sh/setup-loft@main
        with:
          url: ${{ secrets.LOFT_URL }}
          access-key: ${{ secrets.LOFT_ACCESS_KEY }}
      - uses: ./
        with:
          name: template-${{ needs.space_id.outputs.space_id }}
          template: example-template
          user: russellcentanni
          parameters: |
            apps:
            - name: example-manifests
              parameters:
                password: ${{ needs.space_id.outputs.space_id }}
                version: '8.0'
      - run: loft list spaces
      - run: loft delete space template-${{ needs.space_id.outputs.space_id }}
  # test-project-unsupported:
  #   needs:
  #     - space_id
  #     - test-template
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: loft-sh/setup-loft@main
  #       with:
  #         version: 2.3.2
  #     - uses: ./
  #       with:
  #         name: project-unsupported-${{ needs.space_id.outputs.space_id }}
  #         project: foo
